// .for
.for(@i, @n) {.-each(@i)}
.for(@n)     when (isnumber(@n)) {.for(1, @n)}
.for(@i, @n) when not (@i = @n)  {
    .for((@i + (@n - @i) / abs(@n - @i)), @n);
}
// .for-each
.for(@array)   when (default()) {.for-impl_(length(@array))}
.for-impl_(@i) when (@i > 1)    {.for-impl_((@i - 1))}
.for-impl_(@i) when (@i > 0)    {.-each(extract(@array, @i))}
// Define your main colour palette using whatever naming system you like

@white: #ffffff;
@white-smoke: #f5f5f5;
@black: #000;

@yellow: #F0BB51;
@yellow-opacity: rgba(255, 180, 0, 0.65);
@mid-black: #231F20;
@body-text: #626D6E;
@damp-green: #03444A;
@green-blue: #05434a;
@orange-opa: rgba(255, 142, 74, 0.58);
@peach-opa: rgba(234, 149, 118, 0.6705882352941176);
@dull-blue: #9AD3DC;
@dull-red: #EA9576;
@faded-orange: #FF8E4A;


@semi-black: #828282;
@dark: #1C1919;
@transparent: transparent;
@light-blue: #B2F7FF;
@mid-blue: #009DAF;
@dark-blue: #0A3C53;
@custom-blue: #05A8A7;
@mid-gray: #FCFCFC;
@bordergray: #9B9B9B;
@shadow: #070606;
@menu-color: #93A5A7;
@dull-gold: #B78520;
@pure-gold: rgba(226, 162, 12, 0.45);
@droplet-blue: #17D4E2;
@card-bottom: #F8F8F9;
@mid-blue-opa: rgba(24,157,175,0.55);
@dark-blue-opa: rgba(10, 60, 83, 0.6);
@dark-blue-dark-opa: rgba(10, 60, 83, 0.87);
@pale-green-opa: rgba(8, 62, 74, 0.75);
@low-black-opa: rgba(0,0,0,0.25);
@mid-black-opa: rgba(0,0,0,0.50);
@high-black-opa: rgba(0,0,0,0.75);
@low-white-opa: rgba(255,255,255,0.25);
@mid-white-opa: rgba(255,255,255,0.50);
@high-white-opa: rgba(255,255,255,0.75);

@colors:
    'white',
    'white-smoke',
    'black',
    'yellow',
    'yellow-opacity',
    'mid-black',
    'semi-black',
    'dark',
    'body-text',
    'damp-green',
    'green-blue',
    'orange-opa',
    'peach-opa',
    'dull-blue',
    'dull-red',
    'faded-orange',

    'transparent',
    'light-blue',
    'mid-blue',
    'dark-blue',
    'custom-blue',
    'mid-gray',
    'bordergray',
    'shadow',
    'menu-color',
    'dull-gold',
    'pure-gold',
    'droplet-blue',
    'card-bottom',
    'mid-blue-opa',
    'dark-blue-opa',
    'dark-blue-dark-opa',
    'pale-green-opa',
    'low-black-opa',
    'mid-black-opa',
    'high-black-opa',
    'low-white-opa',
    'mid-white-opa',
    'high-white-opa';

.theme{
  .for(@colors); .-each(@color) {
    @key: e(@color);
    @value: @@key;
    //BG theming
    &.bg-@{key} {
        background-color: @value;
    }
    &.bg-lg-@{key} {
        @media(min-width: ~"991px"){
            background-color: @value !important;
        }
    }
    &.bg-md-@{key} {
        @media(min-width: ~"767px"){
            background-color: @value !important;
        }
    }
    &.bg-sm-@{key} {
        @media(max-width: ~"575px"){
            background-color: @value !important;
        }
    }
    &.bg-active-@{key}:active {
        background-color: @value;
    }
    &.bg-before-@{key}:before {
        background-color: @value;
    }
    &.bg-after-@{key}:after {
        background-color: @value;
    }
    &.bg-hover-@{key}:hover {
        background-color: @value;
    }
    &.bg-label-checked-@{key} {
        &:checked + label {
            background-color: @value;
        }
    }
    //Color theming
    &.color-@{key} {
        color: @value !important;
    }
    &.color-lg-@{key} {
        @media(min-width: ~"991px"){
            color: @value !important;
        }
    }
    &.color-md-@{key} {
        @media(min-width: ~"767px"){
            color: @value !important;
        }
    }
    &.color-sm-@{key} {
        @media(min-width: ~"575px"){
            color: @value !important;
        }
    }
    &.color-active-@{key}:active {
        color: @value;
    }
    &.color-before-@{key}:before {
        color: @value;
    }
    &.color-after-@{key}:after {
        color: @value;
    }
    &.color-hover-@{key}:hover {
        color: @value;
    }
    &.color-label-checked-@{key} {
        &:checked + label {
            color: @value;
        }
    }
    //Box shadow
    &.box-shadow-@{key} {
        box-shadow: 0px 3px 10px @value;
    }
    //Fill for svgs
    &.fill-@{key} {
        fill: @value;
    }
    //Border theming
    &.border-@{key} {
        border-color: @value;
    }
    &.border-lg-@{key} {
        @media(min-width: ~"991px"){
            border-color: @value !important;
        }
    }
    &.border-md-@{key} {
        @media(min-width: ~"767px"){
            border-color: @value !important;
        }
    }
    &.border-sm-@{key} {
        @media(min-width: ~"575px"){
            border-color: @value !important;
        }
    }
    &.border-after-@{key}:after {
        border-color: @value;
    }
    &.border-before-@{key}:before {
        border-color: @value;
    }
    //Input field theming
    &.input-focus-label-@{key}{
        &:focus{
            + label{
                color:@value;
            }
        }
    }
    &.place-holder-@{key} {
        ::-webkit-input-placeholder {
          color: @value;
        }
        ::-moz-placeholder {
          color: @value;
        }
        :-ms-input-placeholder {
          color: @value;
        }
        :-moz-placeholder {
          color: @value;
        }
    }
  }
}

.loop (0) {}
.loop (@index) when (@index > 0) {
  .z-index-@{index} {
    z-index: @index * 1;
  }
  .loop (@index - 1);
}
.loop(20);
